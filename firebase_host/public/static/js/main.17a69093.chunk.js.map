{"version":3,"sources":["pages/CardBoard/components/RetroCard.js","firebase.js","pages/CardBoard/components/BoardItem.js","pages/CardBoard/CardBoard.js","pages/Layout.js","services/authService.js","App.js","reportWebVitals.js","index.js"],"names":["RetroCard","props","useState","like","setLike","isLike","setIsLike","Card","className","style","backgroundColor","color","Body","text","fontSize","icon","faUser","faComment","onClick","faThumbsUp","firebase","initializeApp","packageJson","firebaseConfig","firestore","BoardItem","cards","setCards","showAddModal","setShowAddModal","addModalClose","cardTextAdd","useRef","cardColorAdd","useEffect","collection","where","id","orderBy","onSnapshot","item","newCards","forEach","i","data","push","Header","styles","title","faPlusCircle","Modal","show","on","Title","type","ref","placeholder","Footer","Button","variant","current","value","add","boardItemId","parseInt","length","Home","children","Layout","localStorage","getItem","overflowY","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17a69093.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport '../style.css'\nimport { Card } from 'react-bootstrap'\nimport { faUser, faThumbsUp, faComment } from '@fortawesome/free-solid-svg-icons'\nimport '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport default function RetroCard(props) {\n\n    const [like, setLike] = useState(0)\n\n    const likeAction = () => {\n        if (!isLike) setLike(like + 1)\n        else setLike(like - 1)\n        setIsLike(!like)\n    }\n\n    const [isLike, setIsLike] = useState(false)\n\n    return <>\n        <Card className=\"card-style\" style={{ backgroundColor: props.color ?? 'gray' }}>\n            <Card.Body>\n                {props.text}<br></br>\n                <div className=\"retro-card-footer\">\n                    <span className=\"retro-card-footer-action-icon\"><span style={{ fontSize: '60%' }}>NilPhumiphat</span> <FontAwesomeIcon icon={faUser} /> </span>\n                    <span className=\"retro-card-footer-action-icon\">0 <FontAwesomeIcon className=\"cursor-pointer\" icon={faComment} /></span>\n                    <span className=\"retro-card-footer-action-icon\" onClick={likeAction}>{like} <FontAwesomeIcon className=\"cursor-pointer\" style={{ color: isLike ? 'blue' : 'white' }} icon={faThumbsUp} /></span>\n                </div>\n            </Card.Body>\n        </Card>\n    </>\n}","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport packageJson from '../package.json'\n\nfirebase.initializeApp(packageJson.firebaseConfig)\n\nconst firestore = firebase.firestore()\n\nexport { firestore, firebase as default }","import React, { useState, useRef, useEffect } from 'react'\nimport '../style.css'\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport RetroCard from './RetroCard'\nimport { Card, Modal, Button } from 'react-bootstrap'\nimport { firestore } from '../../../firebase'\n\n\nexport default function BoardItem(props) {\n\n    const [cards, setCards] = useState([])\n    const [showAddModal, setShowAddModal] = useState(false)\n\n    const addModalShow = () => setShowAddModal(true)\n    const addModalClose = () => setShowAddModal(false)\n\n    const cardTextAdd = useRef(null)\n    const cardColorAdd = useRef(null)\n\n    useEffect(() => {\n        fetchCards()\n    }, [])\n\n\n    function fetchCards() {\n        firestore.collection('boardItems')\n            .where('boardItemId', '==', props.id)\n            .orderBy('id', 'asc')\n            .onSnapshot((item) => {\n                const newCards = []\n                item.forEach((item) => {\n                    const i = item.data()\n                    newCards.push(<RetroCard text={i.text} color={i.color} />)\n                })\n                setCards(newCards)\n\n            })\n    }\n\n    function addCard() {\n        if (cardTextAdd.current.value && cardTextAdd.current.value !== '') {\n            firestore.collection('boardItems').add({\n                boardItemId: props.id,\n                id: parseInt((cards.length ?? 0) + 1),\n                text: cardTextAdd.current.value,\n                color: cardColorAdd.current.value\n            })\n        }\n        addModalClose()\n    }\n\n    return <>\n        <Card className=\"board-item\">\n            <Card.Header className=\"text-center\" style={{ ...styles, backgroundColor: props.color ?? styles.backgroundColor }}>\n                <b>{props.title}</b><FontAwesomeIcon className=\"add-icon\" icon={faPlusCircle} onClick={addModalShow} />\n            </Card.Header>\n            <Card.Body>\n                {cards}\n            </Card.Body>\n        </Card>\n\n        <Modal show={showAddModal} on={addModalClose}>\n            <Modal.Header>\n                <Modal.Title>เพิ่ม Retrospective Card</Modal.Title><span className=\"add-icon\"><input type=\"color\" ref={cardColorAdd} /></span>\n            </Modal.Header>\n            <Modal.Body>\n                <textarea className=\"form-control\" placeholder=\"ใส่ข้อความที่ต้องการ.....\" ref={cardTextAdd} />\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"danger\" onClick={addModalClose}>ยกเลิก</Button>\n                <Button variant=\"success\" onClick={addCard}>เพิ่ม</Button>\n            </Modal.Footer>\n        </Modal>\n    </>\n}\n\nlet styles = {\n    backgroundColor: '#2c3e50',\n    color: 'white',\n}","import React, { useState } from 'react'\nimport BoardItem from './components/BoardItem'\nimport './style.css'\nimport { firestore } from '../../firebase'\n\nexport default function Home(props, { children }) {\n    return <>\n        <BoardItem id=\"1\" title=\"ความประทับใจ\" />\n        <BoardItem id=\"2\" title=\"สิ่งที่ได้ทำเเละภูมิใจ\" />\n        <BoardItem id=\"3\" title=\"สิ่งที่ควรเเก้เเละปรับปรุง\" />\n        <BoardItem id=\"4\" title=\"สิ่งที่ควรเเก้เเละปรับปรุง\" />\n        <BoardItem id=\"5\" title=\"สิ่งที่ควรเเก้เเละปรับปรุง\" />\n    </>\n}","import React, { useState } from 'react'\nimport CardBoard from './CardBoard/CardBoard'\nimport { getUsername } from '../services/authService'\nimport { Nav } from 'react-bootstrap';\n\nexport default function Layout() {\n\n    const [show, setShowText] = useState(false)\n\n    const username = getUsername()\n\n    if (username || username !== '') {\n\n    }\n    return <>\n        \n        <div className=\"d-flex flex-wrap justify-content-center align-items-top h-100 pl-5 pr-5t\" style={{ overflowY: 'scroll' }}>\n            <CardBoard />\n        </div>\n    </>\n}\n\nconst styles = {\n    bg: {\n        backgroundColor: 'springgreen',\n        width: '100%',\n        height: '100%',\n    },\n    showText: {\n        color: 'black',\n        backgroundColor: '',\n        borderRadius: '10px',\n        opacity: '.8',\n    },\n    blurText: {\n        color: 'gray',\n        backgroundColor: 'gray',\n        borderRadius: '10px',\n        opacity: '.8',\n    }\n}","export function getUsername() {\n    return localStorage.getItem('data_username')\n}","import React from 'react'\nimport Layout from './pages/Layout'\n\nexport default function App() {\n  return <>\n    <Layout />\n  </>\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'animate.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}