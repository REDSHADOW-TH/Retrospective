{"version":3,"sources":["pages/CardBoard/assets/add.png","pages/CardBoard/components/RetroCard.js","pages/CardBoard/components/BoardItem.js","pages/CardBoard/CardBoard.js","pages/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["RetroCard","props","Card","className","style","backgroundColor","color","Body","text","float","Button","variant","BoardItem","useState","showAddModal","setShowAddModal","addModalClose","children","cards","setCards","cardTextAdd","useRef","cardColorAdd","Header","styles","title","src","addIcon","alt","onClick","Modal","show","on","Title","class","type","ref","placeholder","Footer","current","value","console","log","Home","Layout","overflowY","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4485e0cd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/add.13269664.png\";","import React from 'react'\r\nimport { Card, Button } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nexport default function RetroCard(props) {\r\n    return <>\r\n        <Card className=\"card-style\" style={{ backgroundColor: props.color ?? 'gray' }}>\r\n            <Card.Body>\r\n                {props.text}<br></br>\r\n                <div style={{ float: 'right' }}>\r\n                    <Button variant=\"primary\">Edit</Button>\r\n                    <Button variant=\"primary\">Like</Button>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    </>\r\n}","import React, { useState, useRef } from 'react'\r\nimport '../style.css'\r\nimport addIcon from '../assets/add.png'\r\nimport RetroCard from './RetroCard'\r\nimport { Card, Modal, Button } from 'react-bootstrap'\r\n\r\nexport default function BoardItem(props) {\r\n    const [showAddModal, setShowAddModal] = useState(false)\r\n    \r\n    const addModalShow = () => setShowAddModal(true)\r\n    const addModalClose = () => setShowAddModal(false)\r\n\r\n    const [cards, setCards] = useState(props.children)\r\n\r\n    const cardTextAdd = useRef(null)\r\n\r\n    const cardColorAdd = useRef(null)\r\n\r\n    function addCard() {\r\n        if (cardTextAdd.current.value && cardTextAdd.current.value !== '') {\r\n            console.log(cardTextAdd.current.value)\r\n            setCards([...cards, <RetroCard text={cardTextAdd.current.value} color={cardColorAdd.current.value} />])\r\n        }\r\n        addModalClose()\r\n    }\r\n\r\n    return <>\r\n        <Card className=\"card board-item\">\r\n            <Card.Header className=\"card-header text-center\" style={{ ...styles, backgroundColor: props.color ?? styles.backgroundColor }}>\r\n                <b>{props.title}</b><img src={addIcon} alt=\"add card\" className=\"add-icon\" onClick={addModalShow} />\r\n            </Card.Header>\r\n            <Card.Body className=\"card-body\">\r\n                {cards}\r\n            </Card.Body>\r\n        </Card>\r\n\r\n        <Modal show={showAddModal} on={addModalClose}>\r\n            <Modal.Header>\r\n                <Modal.Title>เพิ่ม Retrospective Card</Modal.Title><span class=\"add-icon\"><input type=\"color\" ref={cardColorAdd} /></span>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <textarea class=\"form-control\" placeholder=\"ใส่ข้อความที่ต้องการ.....\" ref={cardTextAdd} />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"danger\" onClick={addModalClose}>ยกเลิก</Button>\r\n                <Button variant=\"success\" onClick={addCard}>เพิ่ม</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    </>\r\n}\r\n\r\nlet styles = {\r\n    backgroundColor: 'gray',\r\n    color: 'white',\r\n}","import React, { useState } from 'react'\r\nimport BoardItem from './components/BoardItem'\r\nimport RetroCard from './components/RetroCard'\r\nimport './style.css'\r\n\r\nfunction mockCards() {\r\n    const cards = []\r\n    // for (let i = 1; i <= 3; i++) {\r\n    //     cards.push(<RetroCard text={i} />)\r\n    // }\r\n    return cards\r\n}\r\n\r\nexport default function Home(props, { children }) {\r\n    const [cards, setCards] = useState([])\r\n\r\n    function addCard() {\r\n\r\n    }\r\n\r\n    return <>\r\n        <BoardItem title=\"ความประทับใจ\" color=\"springgreen\" children={mockCards()} />\r\n        <BoardItem title=\"สิ่งที่ได้ทำเเละภูมิใจ\" color=\"tomato\" children={mockCards()} />\r\n        <BoardItem title=\"สิ่งที่ควรเเก้เเละปรับปรุง\" color=\"blueviolet\" children={mockCards()} />\r\n        <BoardItem title=\"สิ่งที่ควรเเก้เเละปรับปรุง\" color=\"blueviolet\" children={mockCards()} />\r\n        <BoardItem title=\"สิ่งที่ควรเเก้เเละปรับปรุง\" color=\"blueviolet\" children={mockCards()} />\r\n    </>\r\n}","import React, { useState } from 'react'\r\nimport CardBoard from './CardBoard/CardBoard'\r\n\r\nexport default function Layout() {\r\n\r\n    const [showText, setShowText] = useState(false)\r\n\r\n    return <div className=\"d-flex flex-wrap justify-content-center align-items-top h-100 pl-5 pr-5t\" style={{overflowY: 'scroll'}}>\r\n        <CardBoard />\r\n    </div>\r\n}\r\n\r\nconst styles = {\r\n    bg: {\r\n        backgroundColor: 'springgreen',\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    showText: {\r\n        color: 'black',\r\n        backgroundColor: '',\r\n        borderRadius: '10px',\r\n        opacity: '.8',\r\n    },\r\n    blurText: {\r\n        color: 'gray',\r\n        backgroundColor: 'gray',\r\n        borderRadius: '10px',\r\n        opacity: '.8',\r\n    }\r\n}","import React from 'react'\nimport Layout from './pages/Layout'\n\nexport default function App() {\n  return <>\n    <Layout />\n  </>\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'animate.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}